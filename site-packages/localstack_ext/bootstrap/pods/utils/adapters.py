import io,logging,os,zipfile
from typing import Any,Callable,List
from localstack.utils.files import load_file,save_file
from localstack_ext.bootstrap.pods.service_state.service_state import ServiceState
from localstack_ext.bootstrap.pods.service_state.service_state_types import AssetNameType,AssetValueType,BackendState,BackendType,ServiceKey,ServiceNameType
from localstack_ext.constants import API_STATES_DIR,ASSETS_DIRECTORY,CLOUDPODS_METADATA_FILE
LOG=logging.getLogger(__name__)
class ServiceStateMarshaller:
	@staticmethod
	def marshall(state,marshall_function=None):
		F=marshall_function;E=state;B=io.BytesIO()
		with zipfile.ZipFile(B,'a')as G:
			for(C,J)in E.state.items():
				K=os.path.join(C.account_id,C.service,C.region)
				for(L,A)in J.backends.items():
					if not isinstance(A,bytes)and F:A=F(A)
					G.writestr(os.path.join(API_STATES_DIR,K,L),A)
			for(H,M)in E.assets.items():
				for(I,D)in M.items():
					if D is None:continue
					try:N=os.path.join(ASSETS_DIRECTORY,H,I);G.writestr(N,D)
					except Exception as O:LOG.exception('Failed to marshall %s for %s with value %s: %s',I,H,D,O)
		B.seek(0);return B.getvalue()
	@staticmethod
	def unmarshall(zip_content,raw_bytes=False,unmarshall_function=None):
		F=unmarshall_function;E=raw_bytes;D='/';B=zip_content
		if not B:return ServiceState()
		if not E and not F:LOG.debug('No unmarshal function provided')
		if isinstance(B,bytes):
			try:B=zipfile.ZipFile(io.BytesIO(B))
			except Exception as G:LOG.debug(f"Zip content not valid: {G}")
		C=ServiceState()
		def H(_filename):
			G=_filename;I=G.split(D);J,H,K,L=I[-4:];A=B.read(G)
			if not E:
				try:A=F(A)
				except ModuleNotFoundError:LOG.warning('Unable to restore the state for %s',H);return
			M=BackendState(key=ServiceKey(J,K,H),backends={L:A});C.put_backend(M)
		def I(_filename):A=_filename;E=os.path.normpath(A).split(D);F=E[1];G=os.path.join(*E[2:]);H=B.read(A);C.put_asset(F,G,H)
		for A in B.namelist():
			if not A.endswith(D):
				LOG.debug('Unmarshalling file %s',A)
				if A.startswith('api_'):H(_filename=A)
				elif CLOUDPODS_METADATA_FILE in A:0
				elif A.startswith('assets/'):I(_filename=A)
				else:LOG.debug('Zip entry %s has not been processed (unexpected file name)',A)
		return C
	@staticmethod
	def unmarshall_zip_archive(file_path):A=load_file(file_path,mode='rb');return ServiceStateMarshaller.unmarshall(A,raw_bytes=True)
	@staticmethod
	def marshall_zip_archive(file_path,service_state):
		A=service_state
		try:B=ServiceStateMarshaller.marshall(state=A)
		except Exception as C:LOG.exception('Failing to marshall service state: %s. Using original state',C);B=A
		save_file(file_path,B)